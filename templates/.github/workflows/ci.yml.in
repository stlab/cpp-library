name: CI

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main ]

jobs:
  test:
    strategy:
      matrix:
        os: [ubuntu-latest, macos-latest, windows-latest]
        compiler: [gcc, clang, msvc]
        exclude:
          - os: ubuntu-latest
            compiler: msvc
          - os: macos-latest
            compiler: msvc
          - os: macos-latest
            compiler: gcc
          - os: windows-latest
            compiler: gcc
          - os: windows-latest
            compiler: clang

    runs-on: ${{ matrix.os }}

    steps:
    - uses: actions/checkout@v4

    - name: Setup Ninja
      uses: ashutoshvarma/setup-ninja@master

    - name: Setup GCC
      if: matrix.compiler == 'gcc'
      uses: egor-tensin/setup-gcc@v1
      with:
        version: latest

    - name: Setup Clang
      if: matrix.compiler == 'clang' && matrix.os == 'ubuntu-latest'
      uses: egor-tensin/setup-clang@v1
      with:
        version: latest

    - name: Setup MSVC
      if: matrix.compiler == 'msvc'
      uses: ilammy/msvc-dev-cmd@v1

    - name: Configure CMake
      run: cmake --preset=test

    - name: Build
      run: cmake --build --preset=test

    - name: Test
      run: ctest --preset=test

  docs:
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main' && github.event_name == 'push'
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Setup Ninja
      uses: ashutoshvarma/setup-ninja@master
      
    - name: Install Doxygen
      run: sudo apt-get update && sudo apt-get install -y doxygen graphviz
    
    - name: Configure CMake
      run: cmake --preset=docs
    
    - name: Build Documentation
      run: cmake --build --preset=docs
    
    - name: Deploy to GitHub Pages
      if: success() && '@ENABLE_DOCS_DEPLOYMENT@' == 'true'
      uses: peaceiris/actions-gh-pages@v3
      with:
        github_token: ${{ secrets.GITHUB_TOKEN }}
        publish_dir: ./build/docs/html
        destination_dir: @PROJECT_NAME@
